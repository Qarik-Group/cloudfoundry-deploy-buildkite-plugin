#!/bin/bash

set -euo pipefail

env | sort

(
  # cf api
  args=()
  args+=("$BUILDKITE_PLUGIN_CLOUDFOUNDRY_DEPLOY_API")

  [[ -n "${BUILDKITE_PLUGIN_CLOUDFOUNDRY_DEPLOY_SKIP_SSL_VALIDATION:-}" ]] && {
    args+=("--skip-ssl-validation")
  }

  echo "--- :cloudfoundry: Running cf api command:"
  echo -ne '\033[90m$\033[0m cf api ' >&2

  # Print all the arguments, with a space after, properly shell quoted
  printf "%q " "${args[@]}"
  echo

  cf api "${args[@]}"
)

(
  args=()

  if [[ -n "${BUILDKITE_PLUGIN_CLOUDFOUNDRY_DEPLOY_USERNAME:-}" ]]; then
    args+=("${BUILDKITE_PLUGIN_CLOUDFOUNDRY_DEPLOY_USERNAME}")
  else
    if [[ -z "${CF_USERNAME:-}" ]]; then
      echo "ERROR: must provide \$CF_USERNAME or 'username' property"
      exit 1
    fi
  fi

  # [[ -n "${BUILDKITE_PLUGIN_CLOUDFOUNDRY_DEPLOY_PASSWORD_ENV:-}" ]] && {
  #   export CF_PASSWORD="${!BUILDKITE_PLUGIN_CLOUDFOUNDRY_DEPLOY_PASSWORD_ENV}"
  # }

  echo "--- :cloudfoundry: Running cf auth command:"
  echo -ne '\033[90m$\033[0m cf auth ' >&2

  # Print all the arguments, with a space after, properly shell quoted
  printf "%q " "${args[@]}"
  echo

  cf auth "${args[@]}"
)

# echo "--- :cloudfoundry: Pushing"
# push_args=()

# [[ -n "${BUILDKITE_PLUGIN_CLOUDFOUNDRY_DEPLOY_MANIFEST_PATH:-}" ]] && {
#   push_args+=("-f" "${BUILDKITE_PLUGIN_CLOUDFOUNDRY_DEPLOY_MANIFEST_PATH}")
# }

# cf push "${push_args[@]}"
